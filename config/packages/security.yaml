security:
    encoders:
        App\Entity\User:
            algorithm: auto

    providers:
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email

    role_hierarchy:
        ROLE_EMPLOYEE: ROLE_USER
        ROLE_ADMIN: ROLE_EMPLOYEE

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        login:
            pattern:  ^/api/users/login
            stateless: true
            anonymous: true
            json_login:
                username_path: email
                check_path: /api/users/login
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure
            user_checker: App\Service\UserEnabledChecker

        api:
            pattern: ^/api
            stateless: true
            anonymous: true
            access_denied_handler: App\Security\AccessDeniedHandler
            guard:
                authenticators:
                    - lexik_jwt_authentication.jwt_token_authenticator

        main:
            provider: app_user_provider
            anonymous: lazy
            guard:
                authenticators:
                    - App\Security\AppAuthenticator
    access_control:
        - { path: ^/api/users/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api/users/register, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api/users/confirm, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api, roles: IS_AUTHENTICATED_FULLY }
        - { path: ^/admin, roles: ROLE_EMPLOYEE }
